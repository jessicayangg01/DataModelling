```{R}
```{R}
# Read the data from pumpkins_all_prices.csv
pumpkinsData <- read_csv("pumpkins_all_prices.csv")
# Read the data from pumpkins_all_prices.csv
pumpkinsData <- read("pumpkins_all_prices.csv")
# Read the data from pumpkins_all_prices.csv
pumpkinsData <- read.csv("pumpkins_all_prices.csv")
# Read the data from pumpkins_all_prices.csv
pumpkinsData <- read.csv("pumpkins_all_prices.csv")
# Check the first few rows of the data
head(pumpkinsData)
# Read the data from pumpkins_all_prices.csv
pumpkinsData <- read_csv("pumpkins_all_prices.csv")
# Read the data from pumpkins_all_prices.csv
pumpkinsData <- read.csv("pumpkins_all_prices.csv")
# Check the first few rows of the data
head(pumpkinsData)
table(pumpkinsData$Color)
set.seed(123)
sample_index <- sample(1:nrow(pumpkinsData), 0.8 * nrow(pumpkinsData))
train_data <- pumpkinsData[sample_index, ]
test_data <- pumpkinsData[-sample_index, ]
model <- rpart(Price ~ ., data = train_data)
library(rpart)
model <- rpart(Price ~ ., data = train_data)
# Calculate Mean Absolute Error (MAE)
mae <- mean(abs(predictions - test_data$Price)
# Calculate Mean Squared Error (MSE)
mse <- mean((predictions - test_data$Price)^2)
# Calculate Mean Absolute Error (MAE)
mae <- mean(abs(predictions - test_data$Price))
library(rpart)
model <- rpart(Price ~ ., data = train_data)
# Make predictions on the test set
predictions <- predict(model, test_data)
# Calculate Mean Absolute Error (MAE)
mae <- mean(abs(predictions - test_data$Price))
# Calculate Mean Squared Error (MSE)
mse <- mean((predictions - test_data$Price)^2)
# Calculate R-squared
rsquared <- 1 - (sum((test_data$Price - predictions)^2) / sum((test_data$Price - mean(test_data$Price))^2))
# Display the evaluation metrics
cat("MAE:", mae, "\n")
cat("MSE:", mse, "\n")
cat("R-squared:", rsquared, "\n")
library(dummy)
install.packages("dummies")
library(dummy)
require(installr) updateR()
require(installr) updateR()
require(installr) updateR()
require(installr) updateR
require(installr)
sudo apt update
install.packages("installr")
library(installr)
updateR()
install.packages("dummies")
updateR()
install.packages("dummies")
library(dummy)
updateR()
library(dummy)
install.packages("dummies")
install.packages("dummy", repos="http://R-Forge.R-project.org")
install.packages("dummies")
library(dummy)
install.packages("dummy", repos="http://R-Forge.R-project.org")
library(dummy)
install.packages("dummy", repos="http://R-Forge.R-project.org")
help(dummy)
library(dummy)
install.packages("dummy", repos="http://R-Forge.R-project.org")
library(dummy)
install.packages("dummy")
library(dummy)
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
install.packages("dummy")
library(dummy)
install.packages("dummy")
install.packages("dummy")
library(dummy)
# Create dummy variables for the "Package" variable
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
# Create dummy variables for the "Package" variable
pumpkinsData <- read_csv("pumpkins_all_prices.csv")
# Create dummy variables for the "Package" variable
pumpkinsData <- read.csv("pumpkins_all_prices.csv")
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
table(pumpkinsData$Color)
#pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
pumpkinsData <- dummy(pumpkinsData, names = "Package", sep = "_")
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
pumpkinsData <- cbind(pumpkinsData$Package, dummy(pumpkinsData$Package))
pumpkinsData <- cbind(pumpkinsData$Package, dummy(pumpkinsData$Package))
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
pumpkinsData <- dummy(pumpkinsData$Package)
dummy(pumpkinsData$Package)
(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
as.matrix(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(pumpkinsData$Package))
as.matrix(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(as.matrix(pumpkinsData$Package)))
pumpkinsData <- cbind(pumpkinsData, dummy(as.matrix(pumpkinsData$Package)))
dummy(as.matrix(pumpkinsData$Package))
dummy(pumpkinsData$Package)
pumpkinsData <- dummy.data.frame(pumpkinsData, names = "Package", sep = "_")
data <- data.frame(pumpkinsData$Package)
dummy(data$Package)
data <- data.frame(pumpkinsData$Package)
head(data)
dummy(data$Package)
data <- data.frame(pumpkinsData$Package)
head(data)
dummy(data)
#pumpkinsData <- cbind(pumpkinsData, dummy(as.matrix(pumpkinsData$Package)))
data <- data.frame(pumpkinsData$Package)
head(data)
dummy(data)
pumpkinsData <- cbind(pumpkinsData, dummy(data))
data <- data.frame(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(data))
head(pumpkinsData)
set.seed(123)
sample_index_reg <- sample(1:nrow(pumpkinsData), 0.8 * nrow(pumpkinsData))
train_data_reg <- pumpkinsData[sample_index_reg, ]
test_data_reg <- pumpkinsData[-sample_index_reg, ]
# Make predictions on the test set
predictions2 <- predict(model_reg_new, test_data_reg)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
set.seed(123)
sample_index_reg <- sample(1:nrow(pumpkinsData), 0.8 * nrow(pumpkinsData))
train_data_reg <- pumpkinsData[sample_index_reg, ]
test_data_reg <- pumpkinsData[-sample_index_reg, ]
model_reg_new <- lm(Price ~ ., data = train_data_reg)
model_reg_new <- lm(Price ~ ., data2 = train_data_reg)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
data_temp <- data.frame(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(data_temp))
model_reg_new <- lm(Price ~ ., data = train_data_reg)
data_temp <- data.frame(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(data_temp, sep = "_"))
data_temp <- data.frame(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(data_temp))
head(pumpkinsData)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
# Read the data from pumpkins_all_prices.csv
pumpkinsData <- read.csv("pumpkins_all_prices.csv")
# Check the first few rows of the data
head(pumpkinsData)
table(pumpkinsData$Color)
set.seed(123)
sample_index <- sample(1:nrow(pumpkinsData), 0.8 * nrow(pumpkinsData))
train_data <- pumpkinsData[sample_index, ]
test_data <- pumpkinsData[-sample_index, ]
library(rpart)
model <- rpart(Price ~ ., data = train_data)
# Make predictions on the test set
predictions <- predict(model, test_data)
# Calculate Mean Absolute Error (MAE)
mae <- mean(abs(predictions - test_data$Price))
# Calculate Mean Squared Error (MSE)
mse <- mean((predictions - test_data$Price)^2)
# Calculate R-squared
rsquared <- 1 - (sum((test_data$Price - predictions)^2) / sum((test_data$Price - mean(test_data$Price))^2))
# Display the evaluation metrics
cat("MAE:", mae, "\n")
cat("MSE:", mse, "\n")
cat("R-squared:", rsquared, "\n")
install.packages("dummy")
library(dummy)
# Create dummy variables for the "Package" variable
pumpkinsData <- read.csv("pumpkins_all_prices.csv")
data_temp <- data.frame(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(data_temp))
head(pumpkinsData)
set.seed(123)
sample_index_reg <- sample(1:nrow(pumpkinsData), 0.8 * nrow(pumpkinsData))
train_data_reg <- pumpkinsData[sample_index_reg, ]
test_data_reg <- pumpkinsData[-sample_index_reg, ]
model_reg_new <- lm(Price ~ ., data = train_data_reg)
# Make predictions on the test set
predictions2 <- predict(model_reg_new, test_data_reg)
# Calculate Mean Absolute Error (MAE)
mae2 <- mean(abs(predictions2 - test_data_reg$Price))
# Calculate Mean Squared Error (MSE)
mse2 <- mean((predictions2 - test_data_reg$Price)^2)
# Calculate R-squared
rsquared2 <- 1 - (sum((test_data_reg$Price - predictions2)^2) / sum((test_data_reg$Price - mean(test_data_reg$Price))^2))
# Display the evaluation metrics
cat("MAE:", mae2, "\n")
cat("MSE:", mse2, "\n")
cat("R-squared:", rsquared2, "\n")
install.packages("dummy")
model_reg_new <- lm(Price ~ ., data = train_data_reg)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
model_reg_new <- lm(Price ~ ., data = train_data_reg)
# Make predictions on the test set
predictions2 <- predict(model_reg_new, test_data_reg)
# Calculate Mean Absolute Error (MAE)
mae2 <- mean(abs(predictions2 - test_data_reg$Price))
# Calculate Mean Squared Error (MSE)
mse2 <- mean((predictions2 - test_data_reg$Price)^2)
# Calculate R-squared
rsquared2 <- 1 - (sum((test_data_reg$Price - predictions2)^2) / sum((test_data_reg$Price - mean(test_data_reg$Price))^2))
# Display the evaluation metrics
cat("MAE:", mae2, "\n")
cat("MSE:", mse2, "\n")
cat("R-squared:", rsquared2, "\n")
new_data <- read.csv("pumpkins_topredict.csv")
predictions_new <- predict(model_tree, new_data)
new_data <- read.csv("pumpkins_topredict.csv")
predictions_new <- predict(model, new_data)
# Make predictions on the test set
predictions_tree <- predict(model, test_data)
# Calculate Mean Absolute Error (MAE)
mae_tree <- mean(abs(predictions_tree - test_data$Price))
head(predictions_new, 3)
# Read the data from pumpkins_all_prices.csv
pumpkinsData <- read.csv("pumpkins_all_prices.csv")
# Check the first few rows of the data
head(pumpkinsData)
table(pumpkinsData$Color)
set.seed(123)
sample_index <- sample(1:nrow(pumpkinsData), 0.8 * nrow(pumpkinsData))
train_data <- pumpkinsData[sample_index, ]
test_data <- pumpkinsData[-sample_index, ]
library(rpart)
model <- rpart(Price ~ ., data = train_data)
# Make predictions on the test set
predictions <- predict(model, test_data)
# Calculate Mean Absolute Error (MAE)
mae <- mean(abs(predictions - test_data$Price))
# Calculate Mean Squared Error (MSE)
mse <- mean((predictions - test_data$Price)^2)
# Calculate R-squared
rsquared <- 1 - (sum((test_data$Price - predictions)^2) / sum((test_data$Price - mean(test_data$Price))^2))
# Display the evaluation metrics
cat("MAE:", mae, "\n")
cat("MSE:", mse, "\n")
cat("R-squared:", rsquared, "\n")
install.packages("dummy")
library(dummy)
# Create dummy variables for the "Package" variable
pumpkinsData <- read.csv("pumpkins_all_prices.csv")
data_temp <- data.frame(pumpkinsData$Package)
pumpkinsData <- cbind(pumpkinsData, dummy(data_temp))
head(pumpkinsData)
set.seed(123)
sample_index_reg <- sample(1:nrow(pumpkinsData), 0.8 * nrow(pumpkinsData))
train_data_reg <- pumpkinsData[sample_index_reg, ]
test_data_reg <- pumpkinsData[-sample_index_reg, ]
model_reg_new <- lm(Price ~ ., data = train_data_reg)
# Make predictions on the test set
predictions2 <- predict(model_reg_new, test_data_reg)
# Calculate Mean Absolute Error (MAE)
mae2 <- mean(abs(predictions2 - test_data_reg$Price))
# Calculate Mean Squared Error (MSE)
mse2 <- mean((predictions2 - test_data_reg$Price)^2)
# Calculate R-squared
rsquared2 <- 1 - (sum((test_data_reg$Price - predictions2)^2) / sum((test_data_reg$Price - mean(test_data_reg$Price))^2))
# Display the evaluation metrics
cat("MAE:", mae2, "\n")
cat("MSE:", mse2, "\n")
cat("R-squared:", rsquared2, "\n")
new_data <- read.csv("pumpkins_topredict.csv")
predictions_new <- predict(model, new_data)
head(predictions_new, 3)
#install.packages("dummy")
library(dummy)
